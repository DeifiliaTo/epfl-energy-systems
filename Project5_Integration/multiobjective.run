/*---------------------------------------------------------------------------------------------------------------------------------------
import all the model and data files for part 5
---------------------------------------------------------------------------------------------------------------------------------------*/
include import.run

/*---------------------------------------------------------------------------------------------------------------------------------------
AMPL options
---------------------------------------------------------------------------------------------------------------------------------------*/
#option solver cplex;
 option solver 'C:\AAA\EPFL Y3\Semester 2\Modelling and optimization of energy systems\Project part 2\ampl_mswin64\cplex.exe';												# choose the solver
# option solver '/home/deifilia/AMPL/ampl_linux-intel64/snopt';
option presolve 10;
option snopt_options 'major_iterations=10000';

option omit_zero_rows 1;										# to not display 0 in rows
option omit_zero_cols 1;										# to not display 0 in columns
option log_file 'multiobjective.log';

/*---------------------------------------------------------------------------------------------------------------------------------------
Iterate through objective functions
---------------------------------------------------------------------------------------------------------------------------------------*/
# define parameter for objective function
set alphas := {0..1 by 0.01}; # book §5.2 https://ampl.com/BOOK/CHAPTERS/08-sets1.pdf
param alpha;

# remove previously-defined objective -- see discussion of delete/update in book §11.4 https://ampl.com/BOOK/CHAPTERS/14-command.pdf
# delete objective; # doesn't work as no previous objective statement used
# delete Totalcost; # does work but not ideal as we lose the ability to check this value

# new objective function
# TO EDIT: change the params which feed into the objective function
# case 1
    #minimize multiobjective: alpha*CO2 + (1-alpha)*InvCost;
# case 2
    # minimize multiobjective: alpha*OpCost + (1-alpha)*InvCost;
# case 3
    # delete Totalcost; var Totalcost; subject to tc_cstr: Totalcost = InvCost + OpCost; # need to change TC from objective to variable
    minimize multiobjective: alpha*CO2 + (1-alpha)*(InvCost+OpCost);
# force this to be the objective (otherwise takes the first objective defined -- which is in the model)
objective multiobjective;

# initialise outputs
# TO EDIT: change the first 2 elements of this set to the terms of your objective function (this is for MATLAB--it will use them as plot axes)
#   You can also include other stuff that could be interesting to note on the plot here
set multi_vars := {'CO2', 'InvCost', 'OpCost', 'TotalCost'};
param multi_out{multi_vars,alphas};

# inspired by https://ampl.com/NEW/loop1.html
for {a in alphas} {
    let alpha := a;

    solve;

    # print outputs
    # display CO2;
    # display TIC;
    # display Totalcost;

    # save outputs
    # TO EDIT: make sure that you're saving everything from multi_vars
    let multi_out['CO2',a] := CO2;
    let multi_out['InvCost',a] := InvCost;
    let multi_out['OpCost',a] := OpCost;
    let multi_out['TotalCost',a] := Totalcost;
}

# display all outputs
display multi_out;

/*---------------------------------------------------------------------------------------------------------------------------------------
Create output file
---------------------------------------------------------------------------------------------------------------------------------------*/
# print header
printf{v in multi_vars}: "%s\t", v > multiobjective.dat;
printf: "a\n" > multiobjective.dat;
# print data rows -- after https://ampl.com/NEW/loop1.html
for {a in alphas} {
    printf{v in multi_vars}: "%15.10g\t", multi_out[v,a] > multiobjective.dat;
    printf: "%15.10g\n", a > multiobjective.dat;
}
